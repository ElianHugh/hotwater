## Start a hotwater engine {.unnumbered}


### Description

Start the hotwater engine, launching a plumber API
that is restarted whenever a file in the plumber API's folder is modified.

Extra directories can be specified to refresh the API when
directories other than the plumber folder are modified.

If a plumber endpoint returns an HTML response, when hotwater
refreshes the API, {hotwater} will also order a refresh of any
webpage that is using the API.



### Usage

<pre><code class='language-R'>run(path, dirs = NULL, port = NULL, host = NULL, ignore = NULL)
</code></pre>


### Arguments

<table>
<tr><td style = "white-space: nowrap; font-family: monospace; vertical-align: top"><code id="path">path</code></td>
<td>
path to plumber API file.
</td></tr>
<tr><td style = "white-space: nowrap; font-family: monospace; vertical-align: top"><code id="dirs">dirs</code></td>
<td>
(optional) a character vector of extra directories
to watch for file changes. Paths are resolved from the current working
directory, not the directory of the plumber API file.
</td></tr>
<tr><td style = "white-space: nowrap; font-family: monospace; vertical-align: top"><code id="port">port</code></td>
<td>
[default <code>httpuv::randomPort()</code>] port to launch API on.

port can either be set explicitly, or it defaults to the
<code>plumber.port</code> option. If the plumber option is undefined, the fallback
value of <code>httpuv::randomPort()</code> is used.
</td></tr>
<tr><td style = "white-space: nowrap; font-family: monospace; vertical-align: top"><code id="host">host</code></td>
<td>
[default &quot;127.0.0.1&quot;] host to launch API on.

host can either be set explicitly, or it defaults to the
<code>plumber.host</code> option. If the plumber option is undefined, the fallback
value of &quot;127.0.0.1&quot; is used.
</td></tr>
<tr><td style = "white-space: nowrap; font-family: monospace; vertical-align: top"><code id="ignore">ignore</code></td>
<td>
[default <code>c("*.sqlite", "*.git*")</code>] vector of file globs
to ignore.
</td></tr>
</table>


### Details

To refresh the browser, a postserialize plumber::pr_hook is used to
inject a websocket into the HTML client that listens for the
plumber server refresh.



### See Also

plumber::options_plumber,
plumber::get_option_or_env, plumber::serializer_html



### Examples
```{r, warning=FALSE, message=FALSE, eval=TRUE}
library(hotwater)

if (interactive()) {
 # start a hotwater session on port 9999
 hotwater::run(
   path = system.file("examples", "plumber.R", package = "hotwater"),
   port = 9999L
 )
}



```
